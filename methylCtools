#!/usr/bin/env python
import sys

#######################################
# methylCtools
# v1.1.0
# 26 march 2022
#
# volker hovestadt
# developed at the german cancer research center, 2011-2015
# methylctools@hovestadt.bio
#
#


hm = "\n\
    program   methylCtools\n\
    purpose   analysis of whole-genome bisulfite sequencing data\n\
\n\
    version   0.9.4\n\
    date      7 july 2014\n\
    author    volker hovestadt\n\
    contact   v.hovestadt@dkfz.de\n\
\n\
    usage     methylCtools <command> [options]\n\
\n\
\n\
    command       in            out           function\n\
    -----------------------------------------------------------------------------\n\
    faconv        fa            fa            convert reference CtoT and GtoA\n\
    fapos         fa            pos           generate positions index\n\
\n\
    fqconv        fq            fq            convert reads CtoT and GtoA\n\
    fqsplit       fq            fq            split reads into multiple files\n\
\n\
    bconv         bam           bam           re-convert reads, filter alignments\n\
    bcall         bam, pos      tab           call methylation status\n\
    bfq           bam           fq            extract fastq from alignment\n"


#######################################
# run module

try:
	if len(sys.argv) >= 2:
		if "faconv" in sys.argv:
			from faconv import mod_faconv
			mod_faconv(sys.argv[sys.argv.index("faconv")+1:])
			
		elif "fapos" in sys.argv:
			from fapos import mod_fapos
			mod_fapos(sys.argv[sys.argv.index("fapos")+1:])
			
		elif "fqconv" in sys.argv:
			from fqconv import mod_fqconv
			mod_fqconv(sys.argv[sys.argv.index("fqconv")+1:])

		elif "fqsplit" in sys.argv:
			from fqsplit import mod_fqsplit
			mod_fqsplit(sys.argv[sys.argv.index("fqsplit")+1:])

		elif "bconv" in sys.argv:
			from bconv import mod_bconv
			mod_bconv(sys.argv[sys.argv.index("bconv")+1:])

		elif "bcall" in sys.argv:
			from bcall import mod_bcall
			mod_bcall(sys.argv[sys.argv.index("bcall")+1:])

		else:
			sys.exit(hm)
	else:
		sys.exit(hm)
		
except KeyboardInterrupt:
	exit("keyboard interrupt")

	
